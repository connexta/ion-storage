openapi: 3.0.2
info:
  title: ION Storage
  version: '${project.version}'
  description: ION storage abstraction service
  contact:
    name: 'Connexta, LLC'
    url: 'https://connexta.com'
  license:
    name: GNU Lesser General Public License
    url: 'http://www.gnu.org/licenses/lgpl.html'
servers:
- url: '${rest.server.url}'

paths:
  /folders:
    summary: Folders collection
    get:
      operationId: getFolders
      summary: Lists folders
      description: 'Retrieves a list of all created folders. The contents of the folders is not retrieved, only their names.'
      tags:
      - Folders

      responses:

        '200':
          description: A JSON object with an array of folders
          content:
            application/json:
              schema:
                type: object
                properties:
                  folders:
                    type: array
                    items:
                      type: string
                    example:
                    - /foo
                    - /bar

    post:
      operationId: newFolder
      summary: Creates folder
      description: Creates new folder. The folder's name is taken from the request body.
      tags:
      - Folders

      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                folderName:
                  type: string
                  example: arrakis

      responses:

        '201':
          description: Created

        '409':
          description: A folder with that name already exists

  '/folders/{folderName}':

    summary: Individual folder resource

    get:
      operationId: getFiles
      summary: Lists folder's content
      description: 'Retrieves a list with the folder''s content. The actual files are not retrieved, only their names.'
      tags:
      - Folders

      parameters:
      - in: path
        name: folderName
        schema:
          type: string
        required: true
        description: The folder's name

      responses:

        '200':
          description: A JSON array of files
          content:
            application/json:
              schema:
                type: object

                properties:

                  folderName:
                    type: string
                    example: arrakis

                  contents:
                    type: array
                    items:
                      type: string
                    example:
                    - foo.png
                    - bar.xml

        '404':
          description: Folder not found

    put:
      operationId: renameFolder
      summary: Renames folder
      description: Renames specified folder
      tags:
      - Folders

      parameters:
      - in: path
        name: folderName
        schema:
          type: string
        required: true
        description: The folder's name

      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                folderName:
                  type: string
                  example: arrakis_2.0

      responses:

        '200':
          description: OK

        '404':
          description: Folder not found

        '409':
          description: A folder with that name already exists

    delete:
      operationId: deleteFolder
      summary: Deletes folder
      description: Deletes specified folder
      tags:
      - Folders

      parameters:
      - in: path
        name: folderName
        schema:
          type: string
        required: true
        description: The folder's name

      responses:

        '200':
          description: OK

        '404':
          description: Folder not found

  '/folders/{folderName}/files/{filename}':

    get:
      operationId: downloadFile
      summary: Downloads file
      description: Downloads the specified file
      tags:
      - Files

      parameters:

      - in: path
        name: folderName
        schema:
          type: string
        required: true
        description: The folder's name

      - in: path
        name: filename
        schema:
          type: string
        required: true
        description: The filename

      responses:

        '200':
          description: A file
          content:
            octetStream:
              schema:
                type: string
                format: binary

        '404':
          description: Folder or file not found

    post:
      operationId: uploadFile
      summary: Uploads file
      description: Uploads specified file
      tags:
      - Files

      parameters:

      - in: path
        name: folderName
        schema:
          type: string
        required: true
        description: The folder's name

      - in: path
        name: filename
        schema:
          type: string
        required: true
        description: The filename

      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                file:
                  type: string
                  format: binary

      responses:
        '201':
          description: Created

        '404':
          description: Folder not found

        '409':
          description: A file with that name already exists

    put:
      operationId: updateFile
      summary: Updates file
      description: Updates specified file
      tags:
      - Files

      parameters:
      - in: path
        name: folderName
        schema:
          type: string
        required: true
        description: The folder's name

      - in: path
        name: filename
        schema:
          type: string
        required: true
        description: The filename

      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                file:
                  type: string
                  format: binary
      responses:

        '200':
          description: OK

        '404':
          description: Folder or file not found

    delete:
      operationId: deleteFile
      summary: Deletes file
      description: Deletes specified file
      tags:
      - Files

      parameters:

      - in: path
        name: folderName
        schema:
          type: string
        required: true
        description: The folder's name

      - in: path
        name: filename
        schema:
          type: string
        required: true
        description: The filename

      responses:

        '200':
          description: OK

        '404':
          description: Folder or file not found
